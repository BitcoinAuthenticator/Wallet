<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.bitcoinj</groupId>
    <artifactId>wallettemplate</artifactId>
    <name>BitcoinAuthenticator Wallet</name>
    <version>0.1</version>
    <url>https://bitcoinauthenticator.org/</url>

    <build>
        <!-- Build settigns -->
        <finalName>BTCAuthenticator</finalName>
        
        
        <plugins>
            <!-- Compiler Plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!-- Assembly Plugin - main executable jar -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>wallettemplate.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptors>
                        <descriptor>src/assemble/exe.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Put izPack2app into linux staging dir for production of linux installer later -->
                    <execution>
                        <id>unpack-shared-resources-ipack2app-linux</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <includeGroupIds>org.codehaus.izpack</includeGroupIds>
                            <includeArtifactIds>izpack-standalone-compiler</includeArtifactIds>
                            <classifier>izpack2app</classifier>
                            <type>zip</type>
                            <excludeTransitive>true</excludeTransitive>
                            <outputDirectory>${staging.linux.dir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Produce staging directory with all resources used in creation of
             the linux IzPack installer and in creation of the Mac application bundle -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>copy-resources-to-staging-linux</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${staging.linux.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/izpack/linux</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>install.xml</include>
                                        <include>readme.txt</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>target</directory>
                                    <includes>
                                        <include>BTCAuthenticator-exe-full.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                   
                    
                    <!-- produce a Mac application bundle -->
                    <!-- this plugin copies a skeleton App and then copies in the resources
                     from the linux staging directory -->
                    <!-- Note I have tried using http://mojo.codehaus.org/osxappbundle-maven-plugin/
                     but cannot get extra resources into my Java directory in the app -->
                    <execution>
                        <id>create-skeleton-Mac-application-bundle</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/BTCAuthenticator.app
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <!-- skeleton app including JRE -->
                                    <directory>src/app-resources/BTCAuthenticator.app</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-Java-resources-into-application-bundle</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/BTCAuthenticator.app/Contents/Resources/Java
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/staging.linux</directory>
                                    <includes>
                                        <include>BTCAuthenticator-exe-full.jar</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${basedir}/src/main/izpack/mac</directory>
                                    <includes>
                                        <include>readme.txt</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Build a Mac DMG -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-mac-dmg</id>
                        <phase>install</phase>
                        <configuration>
                            <tasks>
                                <!-- Make the JavaApplicationStub in the Mac application bundle executable
                                 (it loses its 'x' permission after the copy) -->
                                <chmod
                                file="${basedir}/target/BTCAuthenticator.app/Contents/MacOS/JavaApplicationStub"
                                perm="777" />
                                
                                <copy
                                    todir="${basedir}/target/BTCAuthenticator-mac/BTCAuthenticator.app">
                                    <fileset dir="${basedir}/target/BTCAuthenticator.app"
                                    includes="**" />
                                </copy>
                                <copy file="${basedir}/src/main/izpack/mac/readme.txt"
                                todir="${basedir}/target/BTCAuthenticator-mac" />
                                
                                <!-- Create Applications Symbolic link -->
                                <!-- WARNING, do not remove this symbolic link by Java(ant) -->
                                <exec executable="ln" os="'Mac OS X'">
                                    <arg
                                    line="-s /Applications ${basedir}/target/BTCAuthenticator-mac/Applications" />
                                </exec>
                                
                                <!-- Make the JavaAppLauncher in the MultiBit app (it loses its
                                 'x' permission after the copy) -->
                                <chmod
                                file="${basedir}/target/BTCAuthenticator-mac/BTCAuthenticator.app/Contents/MacOS/JavaApplicationStub"
                                perm="777" />
                                
                                <!-- Sign the Mac app -->
                                <exec executable="codesign" os="'Mac OS X'">
                                    <arg
                                    line="--sign 'Developer ID Application: James Burton' --force ${basedir}/target/BTCAuthenticator-mac/BTCAuthenticator.app" />
                                </exec>
                                <!-- Verify it is signed ok -->
                                <exec executable="codesign" os="'Mac OS X'">
                                    <arg
                                    line="--display --verbose=4 ${basedir}/target/BTCAuthenticator-mac/BTCAuthenticator.app" />
                                </exec>
                                
                                <!-- create a DMG file -->
                                <exec executable="hdiutil" os="'Mac OS X'">
                                    <arg value="create" />
                                    <arg value="-noanyowners"/>
                                    <arg value="-imagekey"/>
                                    <arg value="zlib-level=9" />
                                    <arg value="-srcfolder" />
                                    <arg value="${basedir}/target/BTCAuthenticator-mac" />
                                    <arg value="${basedir}/target/BTCAuthenticator-${project.version}.dmg" />
                                </exec>
                                
                                <!-- IMPORTANT! -->
                                <!-- Remove symbolic link before deleting tmp dir -->
                                <exec executable="rm" os="'Mac OS X'">
                                    <arg line="-R ${basedir}/target/BTCAuthenticator-mac/Applications" />
                                </exec>
                                
                                <!-- get rid of temporary directory -->
                                <delete includeEmptyDirs="true">
                                    <fileset dir="${basedir}/target/BTCAuthenticator-mac" />
                                </delete>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            
        </plugins>
    </build>
    
    <repositories>
        <repository>
            <id>gcm-server-repository</id>
            <url>https://raw.github.com/slorber/gcm-server-repository/master/releases/</url>
        </repository>
        <!-- for bug fixing in sarox webcam capture -->
        <repository>
            <id>SarXos Repository</id>
            <url>http://www.sarxos.pl/repo/maven2</url>
        </repository>
    </repositories>
    
    <dependencies>
        <dependency>
  			<groupId>eu.hansolo.enzo</groupId>
 			<artifactId>Enzo</artifactId>
 			<version>0.1</version>
		</dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>   
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
    		<groupId>org.codehaus.izpack</groupId>
  		 	<artifactId>izpack-standalone-compiler</artifactId>
  		 	<version>4.3.5</version>
		</dependency>
        <!--
         QR Dependencies
         -->
        <dependency>
            <groupId>com.github.sarxos</groupId>
            <artifactId>webcam-capture</artifactId>
            <version>0.3.10-RC6</version>
        </dependency>
        <dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>2.1</version>
		</dependency>
        <dependency>
            <groupId>net.glxn</groupId>
            <artifactId>qrgen</artifactId>
            <version>1.3</version>
        </dependency>
        <!--            -->
        <dependency>
            <groupId>com.google</groupId>
            <artifactId>bitcoinj</artifactId>
            <version>0.12-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.7.6</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20080701</version>
        </dependency>
        <dependency>
            <groupId>com.aquafx-project</groupId>
            <artifactId>aquafx</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>de.jensd</groupId>
            <artifactId>fontawesomefx</artifactId>
            <version>8.0.8</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.0.6</version>
        </dependency>
        <dependency>
            <groupId>org.bitlet</groupId>
            <artifactId>weupnp</artifactId>
            <version>0.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.android.gcm</groupId>
            <artifactId>gcm-server</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.ning</groupId>
            <artifactId>async-http-client</artifactId>
            <version>1.8.12</version>
        </dependency>
    </dependencies>
    
    <!-- Properties -->
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Location of staging directory for creation of linux IzPack installer -->
        <staging.linux.dir>${project.build.directory}/staging.linux</staging.linux.dir>
        
    </properties>
</project>
